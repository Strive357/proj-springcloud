server:
  port: 80 # \u7F51\u5173\u4E00\u822C\u662F80
spring:
  application:
    name: gateway-server
  cloud:
    gateway:
      enabled: true # =\u53EA\u8981\u52A0\u4E86\u4F9D\u8D56 \u9ED8\u8BA4\u5F00\u542F
      routes: # \u5982\u679C\u4E00\u4E2A\u670D\u52A1\u91CC\u9762\u6709100\u4E2A\u8DEF\u5F84  \u5982\u679C\u6211\u60F3\u505A\u8D1F\u8F7D\u5747\u8861 ??   \u52A8\u6001\u8DEF\u7531
        -   id: login-service-route  # \u8FD9\u4E2A\u662F\u8DEF\u7531\u7684id \u4FDD\u6301\u552F\u4E00\u5373\u53EF
          #                    uri: http://localhost:8081   # uri\u7EDF\u4E00\u8D44\u6E90\u5B9A\u4F4D\u7B26   url \u7EDF\u4E00\u8D44\u6E90\u6807\u8BC6\u7B26
            uri: lb://login-service   # uri\u7EDF\u4E00\u8D44\u6E90\u5B9A\u4F4D\u7B26   url \u7EDF\u4E00\u8D44\u6E90\u6807\u8BC6\u7B26
            predicates: # \u65AD\u8A00\u662F\u7ED9\u67D0\u4E00\u4E2A\u8DEF\u7531\u6765\u8BBE\u5B9A\u7684\u4E00\u79CD\u5339\u914D\u89C4\u5219 \u9ED8\u8BA4\u4E0D\u80FD\u4F5C\u7528\u5728\u52A8\u6001\u8DEF\u7531\u4E0A
              - Path=/doLogin  # \u5339\u914D\u89C4\u5219  \u53EA\u8981\u4F60Path\u5339\u914D\u4E0A\u4E86/doLogin \u5C31\u5F80 uri \u8F6C\u53D1 \u5E76\u4E14\u5C06\u8DEF\u5F84\u5E26\u4E0A
              - After=2022-03-22T08:42:59.521+08:00[Asia/Shanghai]
              - Method=GET,POST
          #                        - Query=name,admin.   #\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u503C

#            filters:
#              - name: RequestRateLimiter  # 这个是过滤器的名称
#                args: # 这个过滤器的参数
#                  key-resolver: '#{@apiKeyResolver}' # 通过spel表达式取 ioc容器中bean的值
#                  redis-rate-limiter.replenishRate: 1  # 生成令牌的速度
#                  redis-rate-limiter.burstCapacity: 3  # 桶容量
      discovery:
        locator:
          enabled: true  # \u5F00\u542F\u52A8\u6001\u8DEF\u7531  \u5F00\u542F\u901A\u7528\u5E94\u7528\u540D\u79F0 \u627E\u5230\u670D\u52A1\u7684\u529F\u80FD
          lower-case-service-id: true  # \u5F00\u542F\u670D\u52A1\u540D\u79F0\u5C0F\u5199
#            globalcors:
#                corsConfigurations:
#                    '[/**]':
#                        allowCredentials: true  # \u53EF\u4EE5\u643A\u5E26cookie
#                        allowedHeaders: '*'
#                        allowedMethods: '*'
#                        allowedOrigins: '*'
  redis:
    host: 192.168.111.100
    port: 6379
    database: 1
eureka:
  client:
    service-url:
      defaultZone: http://hadoop100:8761/eureka
    registry-fetch-interval-seconds: 3 # \u7F51\u5173\u62C9\u53BB\u670D\u52A1\u5217\u8868\u7684\u65F6\u95F4\u7F29\u77ED
  instance:
    hostname: localhost
    instance-id: ${eureka.instance.hostname}:${spring.application.name}:${server.port}